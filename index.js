/*Данная задача состоит из двух частей. 
В первой части необходимо найти имя пользователя, который 
оставил наибольшее количество рейтингов для фильмов. 
В случае возникновения ситуации, когда несколько пользователей 
оставили одинаковое количество рейтингов, требуется вернуть имя пользователя, которое 
лексикографически меньше.

Во второй части задачи нужно найти название фильма с самым высоким средним рейтингом 
в феврале 2020 года. В случае возникновения ситуации, когда несколько фильмов имеют 
одинаковый средний рейтинг, требуется вернуть название фильма, которое 
лексикографически меньше.

Для решения этой задачи можно использовать следующие SQL-запросы:

1. Часть 1: Найти имя пользователя с наибольшим количеством рейтингов:
```sql
SELECT name AS results
FROM Users u
JOIN MovieRating mr ON u.user_id = mr.user_id
GROUP BY u.user_id
HAVING COUNT(*) = (
    SELECT COUNT(*)
    FROM MovieRating
    GROUP BY user_id
    ORDER BY COUNT(*) DESC
    LIMIT 1
)
ORDER BY name ASC
LIMIT 1;
```

2. Часть 2: Найти название фильма с самым высоким средним рейтингом в феврале 2020 года:
```sql
SELECT title AS results
FROM Movies m
JOIN MovieRating mr ON m.movie_id = mr.movie_id
WHERE YEAR(created_at) = 2020 AND MONTH(created_at) = 2
GROUP BY m.movie_id
HAVING AVG(rating) = (
    SELECT AVG(rating)
    FROM MovieRating
    WHERE YEAR(created_at) = 2020 AND MONTH(created_at) = 2
    GROUP BY movie_id
    ORDER BY AVG(rating) DESC
    LIMIT 1
)
ORDER BY title ASC
LIMIT 1;
```

В первом запросе мы объединяем таблицы `Users` и `MovieRating` с помощью 
оператора `JOIN`, чтобы получить информацию о рейтингах, оставленных пользователями. 
Затем мы группируем результаты по `user_id` и используем функцию `COUNT(*)`, 
чтобы подсчитать количество рейтингов для каждого пользователя. 
В подзапросе мы находим максимальное количество рейтингов, сортируем его по 
убыванию и выбираем только первое значение с помощью `LIMIT 1`. 
Затем мы выбираем имя пользователя с наибольшим количеством рейтингов, 
сортируем его в алфавитном порядке и выбираем только первое значение с помощью `LIMIT 1`.

Во втором запросе мы также объединяем таблицы `Movies` и `MovieRating`, 
чтобы получить информацию о рейтингах фильмов. Затем мы добавляем условие `WHERE`, 
чтобы выбрать только рейтинги, оставленные в феврале 2020 года. 
Мы группируем результаты по `movie_id` и используем функцию `AVG(rating)`, 
чтобы вычислить средний рейтинг для каждого фильма. 
В подзапросе мы находим максимальное значение среднего рейтинга, 
сортируем его по убыванию и выбираем только первое значение с помощью `LIMIT 1`. 
Затем мы выбираем название фильма с самым высоким средним рейтингом, 
сортируем его в алфавитном порядке и выбираем только первое значение с помощью `LIMIT 1`.

Таким образом, результатом выполнения этих запросов будет имя пользователя 
с наибольшим количеством рейтингов 
и название фильма с самым высоким средним рейтингом в феврале 2020 года.*/
